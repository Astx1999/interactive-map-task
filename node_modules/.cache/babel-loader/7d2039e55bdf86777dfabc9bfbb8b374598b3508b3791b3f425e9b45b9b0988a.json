{"ast":null,"code":"var _jsxFileName = \"/Users/astghik/WebstormProjects/interactive-map-task/src/components/ListContainer/ListContainer.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport ListItem from \"../ListItem/ListItem\";\nimport BurgerIcon from \"../BurgerIcon/BurgerIcon\";\nimport Button from \"../Button/Button\";\nimport classNames from \"classnames\";\nimport styles from './ListContainer.module.scss';\nimport FileUploadButton from \"../FileUploadButton/FileUploadButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = _s(observer(_c = _s(({\n  list\n}) => {\n  _s();\n  const [isListOpen, setIsListOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames(styles.root, {\n      [styles.closedMenu]: !isListOpen\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.icon,\n      onClick: () => setIsListOpen(!isListOpen),\n      children: /*#__PURE__*/_jsxDEV(BurgerIcon, {\n        isMenuOpen: isListOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), isListOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(FileUploadButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Export Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), list.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.items,\n        children: list.map((item, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          item: item,\n          index: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.empty,\n        children: \"Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}, \"eV7MOuksuJl9+B6CgpwnxhbhpUY=\")), \"eV7MOuksuJl9+B6CgpwnxhbhpUY=\");\n_c2 = ListContainer;\nexport default ListContainer;\nvar _c, _c2;\n$RefreshReg$(_c, \"ListContainer$observer\");\n$RefreshReg$(_c2, \"ListContainer\");","map":{"version":3,"names":["useState","observer","ListItem","BurgerIcon","Button","classNames","styles","FileUploadButton","jsxDEV","_jsxDEV","ListContainer","_s","_c","list","isListOpen","setIsListOpen","className","root","closedMenu","children","icon","onClick","isMenuOpen","fileName","_jsxFileName","lineNumber","columnNumber","buttons","text","length","items","map","item","index","empty","_c2","$RefreshReg$"],"sources":["/Users/astghik/WebstormProjects/interactive-map-task/src/components/ListContainer/ListContainer.js"],"sourcesContent":["import {useState} from \"react\";\nimport {observer} from \"mobx-react-lite\";\nimport ListItem from \"../ListItem/ListItem\";\nimport BurgerIcon from \"../BurgerIcon/BurgerIcon\";\nimport Button from \"../Button/Button\";\nimport classNames from \"classnames\";\n\nimport styles from './ListContainer.module.scss';\nimport FileUploadButton from \"../FileUploadButton/FileUploadButton\";\n\n\nconst ListContainer = observer(({list}) => {\n\n    const [isListOpen, setIsListOpen] = useState(true)\n\n\n    return (\n        <div className={classNames(styles.root, {[styles.closedMenu]: !isListOpen})}>\n            <div className={styles.icon} onClick={() => setIsListOpen(!isListOpen)}><BurgerIcon\n                isMenuOpen={isListOpen}/>\n            </div>\n\n            {isListOpen && (\n                <div>\n                    <div className={styles.buttons}>\n                        <FileUploadButton/>\n                        <Button text=\"Export Data\"/>\n                    </div>\n\n                    {list.length ?\n                        <div className={styles.items}>\n                            {list.map((item, index) => (\n                                <ListItem key={index} item={item} index={index}/>\n                            ))}\n                        </div> : <p className={styles.empty}>Empty</p>}\n                </div>\n            )}\n        </div>\n    )\n});\n\nexport default ListContainer;\n"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAAQC,QAAQ,QAAO,iBAAiB;AACxC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,YAAY;AAEnC,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,gBAAgB,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpE,MAAMC,aAAa,GAAAC,EAAA,CAAGV,QAAQ,CAAAW,EAAA,GAAAD,EAAA,CAAC,CAAC;EAACE;AAAI,CAAC,KAAK;EAAAF,EAAA;EAEvC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAGlD,oBACIS,OAAA;IAAKO,SAAS,EAAEX,UAAU,CAACC,MAAM,CAACW,IAAI,EAAE;MAAC,CAACX,MAAM,CAACY,UAAU,GAAG,CAACJ;IAAU,CAAC,CAAE;IAAAK,QAAA,gBACxEV,OAAA;MAAKO,SAAS,EAAEV,MAAM,CAACc,IAAK;MAACC,OAAO,EAAEA,CAAA,KAAMN,aAAa,CAAC,CAACD,UAAU,CAAE;MAAAK,QAAA,eAACV,OAAA,CAACN,UAAU;QAC/EmB,UAAU,EAAER;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EAELZ,UAAU,iBACPL,OAAA;MAAAU,QAAA,gBACIV,OAAA;QAAKO,SAAS,EAAEV,MAAM,CAACqB,OAAQ;QAAAR,QAAA,gBAC3BV,OAAA,CAACF,gBAAgB;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACnBjB,OAAA,CAACL,MAAM;UAACwB,IAAI,EAAC;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,EAELb,IAAI,CAACgB,MAAM,gBACRpB,OAAA;QAAKO,SAAS,EAAEV,MAAM,CAACwB,KAAM;QAAAX,QAAA,EACxBN,IAAI,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAClBxB,OAAA,CAACP,QAAQ;UAAa8B,IAAI,EAAEA,IAAK;UAACC,KAAK,EAAEA;QAAM,GAAhCA,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA4B,CACnD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,gBAAGjB,OAAA;QAAGO,SAAS,EAAEV,MAAM,CAAC4B,KAAM;QAAAf,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC,kCAAC;AAACS,GAAA,GA5BGzB,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAE,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}