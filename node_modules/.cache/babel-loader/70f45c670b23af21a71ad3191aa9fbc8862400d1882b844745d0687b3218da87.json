{"ast":null,"code":"var _jsxFileName = \"/Users/astghik/WebstormProjects/interactive-map-task/src/components/ConfirmModal/ConfirmModal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../Button/Button';\nimport classNames from \"classnames\";\nimport styles from './ConfirmModal.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmModal = ({\n  isOpen,\n  isPortal = false,\n  question,\n  handleAddLocation,\n  handleClosePopup,\n  confirmText = \"Yes\",\n  rejectText = \"No\",\n  className\n}) => {\n  if (!isOpen) return null;\n  const modalContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classNames({\n      [styles.overlay]: isPortal\n    }),\n    onClick: e => {\n      e.stopPropagation();\n      handleClosePopup();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddLocation,\n          text: confirmText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClosePopup,\n          version: \"secondary\",\n          text: rejectText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n  if (isPortal) {\n    return /*#__PURE__*/ReactDOM.createPortal(modalContent, document.body);\n  } else {\n    return modalContent;\n  }\n};\n_c = ConfirmModal;\nexport default ConfirmModal;\nvar _c;\n$RefreshReg$(_c, \"ConfirmModal\");","map":{"version":3,"names":["React","ReactDOM","Button","classNames","styles","jsxDEV","_jsxDEV","ConfirmModal","isOpen","isPortal","question","handleAddLocation","handleClosePopup","confirmText","rejectText","className","modalContent","overlay","onClick","e","stopPropagation","children","fileName","_jsxFileName","lineNumber","columnNumber","buttons","text","version","createPortal","document","body","_c","$RefreshReg$"],"sources":["/Users/astghik/WebstormProjects/interactive-map-task/src/components/ConfirmModal/ConfirmModal.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../Button/Button';\nimport classNames from \"classnames\";\nimport styles from './ConfirmModal.module.scss'\n\nconst ConfirmModal = ({isOpen, isPortal = false, question, handleAddLocation, handleClosePopup, confirmText = \"Yes\", rejectText = \"No\", className}) => {\n    if (!isOpen) return null;\n\n    const modalContent = (\n        <div className={classNames({[styles.overlay]: isPortal})}\n             onClick={(e) => {\n                 e.stopPropagation();\n                 handleClosePopup()\n             }}>\n            <div className={className}>\n                <p>{question}</p>\n                <div className={styles.buttons}>\n                    <Button onClick={handleAddLocation} text={confirmText}/>\n                    <Button onClick={handleClosePopup} version=\"secondary\" text={rejectText}/>\n                </div>\n            </div>\n        </div>\n\n    );\n\n    if (isPortal) {\n        return ReactDOM.createPortal(modalContent, document.body);\n    } else {\n        return modalContent;\n    }\n};\n\nexport default ConfirmModal;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAC;EAACC,MAAM;EAAEC,QAAQ,GAAG,KAAK;EAAEC,QAAQ;EAAEC,iBAAiB;EAAEC,gBAAgB;EAAEC,WAAW,GAAG,KAAK;EAAEC,UAAU,GAAG,IAAI;EAAEC;AAAS,CAAC,KAAK;EACnJ,IAAI,CAACP,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMQ,YAAY,gBACdV,OAAA;IAAKS,SAAS,EAAEZ,UAAU,CAAC;MAAC,CAACC,MAAM,CAACa,OAAO,GAAGR;IAAQ,CAAC,CAAE;IACpDS,OAAO,EAAGC,CAAC,IAAK;MACZA,CAAC,CAACC,eAAe,CAAC,CAAC;MACnBR,gBAAgB,CAAC,CAAC;IACtB,CAAE;IAAAS,QAAA,eACHf,OAAA;MAAKS,SAAS,EAAEA,SAAU;MAAAM,QAAA,gBACtBf,OAAA;QAAAe,QAAA,EAAIX;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBnB,OAAA;QAAKS,SAAS,EAAEX,MAAM,CAACsB,OAAQ;QAAAL,QAAA,gBAC3Bf,OAAA,CAACJ,MAAM;UAACgB,OAAO,EAAEP,iBAAkB;UAACgB,IAAI,EAAEd;QAAY;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACxDnB,OAAA,CAACJ,MAAM;UAACgB,OAAO,EAAEN,gBAAiB;UAACgB,OAAO,EAAC,WAAW;UAACD,IAAI,EAAEb;QAAW;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAER;EAED,IAAIhB,QAAQ,EAAE;IACV,oBAAOR,QAAQ,CAAC4B,YAAY,CAACb,YAAY,EAAEc,QAAQ,CAACC,IAAI,CAAC;EAC7D,CAAC,MAAM;IACH,OAAOf,YAAY;EACvB;AACJ,CAAC;AAACgB,EAAA,GAzBIzB,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}