{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import Button from'../Button/Button';import classNames from\"classnames\";import styles from'./ConfirmModal.module.scss';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConfirmModal=_ref=>{let{isOpen,isPortal=false,question,handleAddLocation,handleClosePopup,confirmText=\"Yes\",rejectText=\"No\",className}=_ref;if(!isOpen)return null;const modalContent=/*#__PURE__*/_jsx(\"div\",{className:classNames({[styles.overlay]:isPortal}),onClick:e=>{e.stopPropagation();handleClosePopup();},children:/*#__PURE__*/_jsxs(\"div\",{className:className,children:[/*#__PURE__*/_jsx(\"p\",{children:question}),/*#__PURE__*/_jsxs(\"div\",{className:styles.buttons,children:[/*#__PURE__*/_jsx(Button,{onClick:handleAddLocation,text:confirmText}),/*#__PURE__*/_jsx(Button,{onClick:handleClosePopup,version:\"secondary\",text:rejectText})]})]})});if(isPortal){return/*#__PURE__*/ReactDOM.createPortal(modalContent,document.body);}else{return modalContent;}};export default ConfirmModal;","map":{"version":3,"names":["React","ReactDOM","Button","classNames","styles","jsx","_jsx","jsxs","_jsxs","ConfirmModal","_ref","isOpen","isPortal","question","handleAddLocation","handleClosePopup","confirmText","rejectText","className","modalContent","overlay","onClick","e","stopPropagation","children","buttons","text","version","createPortal","document","body"],"sources":["/Users/astghik/WebstormProjects/interactive-map-task/src/components/ConfirmModal/ConfirmModal.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../Button/Button';\nimport classNames from \"classnames\";\nimport styles from './ConfirmModal.module.scss'\n\nconst ConfirmModal = ({isOpen, isPortal = false, question, handleAddLocation, handleClosePopup, confirmText = \"Yes\", rejectText = \"No\", className}) => {\n    if (!isOpen) return null;\n\n    const modalContent = (\n        <div className={classNames({[styles.overlay]: isPortal})}\n             onClick={(e) => {\n                 e.stopPropagation();\n                 handleClosePopup()\n             }}>\n            <div className={className}>\n                <p>{question}</p>\n                <div className={styles.buttons}>\n                    <Button onClick={handleAddLocation} text={confirmText}/>\n                    <Button onClick={handleClosePopup} version=\"secondary\" text={rejectText}/>\n                </div>\n            </div>\n        </div>\n\n    );\n\n    if (isPortal) {\n        return ReactDOM.createPortal(modalContent, document.body);\n    } else {\n        return modalContent;\n    }\n};\n\nexport default ConfirmModal;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,WAAW,CAChC,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CACrC,MAAO,CAAAC,UAAU,KAAM,YAAY,CACnC,MAAO,CAAAC,MAAM,KAAM,4BAA4B,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkI,IAAjI,CAACC,MAAM,CAAEC,QAAQ,CAAG,KAAK,CAAEC,QAAQ,CAAEC,iBAAiB,CAAEC,gBAAgB,CAAEC,WAAW,CAAG,KAAK,CAAEC,UAAU,CAAG,IAAI,CAAEC,SAAS,CAAC,CAAAR,IAAA,CAC9I,GAAI,CAACC,MAAM,CAAE,MAAO,KAAI,CAExB,KAAM,CAAAQ,YAAY,cACdb,IAAA,QAAKY,SAAS,CAAEf,UAAU,CAAC,CAAC,CAACC,MAAM,CAACgB,OAAO,EAAGR,QAAQ,CAAC,CAAE,CACpDS,OAAO,CAAGC,CAAC,EAAK,CACZA,CAAC,CAACC,eAAe,CAAC,CAAC,CACnBR,gBAAgB,CAAC,CAAC,CACtB,CAAE,CAAAS,QAAA,cACHhB,KAAA,QAAKU,SAAS,CAAEA,SAAU,CAAAM,QAAA,eACtBlB,IAAA,MAAAkB,QAAA,CAAIX,QAAQ,CAAI,CAAC,cACjBL,KAAA,QAAKU,SAAS,CAAEd,MAAM,CAACqB,OAAQ,CAAAD,QAAA,eAC3BlB,IAAA,CAACJ,MAAM,EAACmB,OAAO,CAAEP,iBAAkB,CAACY,IAAI,CAAEV,WAAY,CAAC,CAAC,cACxDV,IAAA,CAACJ,MAAM,EAACmB,OAAO,CAAEN,gBAAiB,CAACY,OAAO,CAAC,WAAW,CAACD,IAAI,CAAET,UAAW,CAAC,CAAC,EACzE,CAAC,EACL,CAAC,CACL,CAER,CAED,GAAIL,QAAQ,CAAE,CACV,mBAAOX,QAAQ,CAAC2B,YAAY,CAACT,YAAY,CAAEU,QAAQ,CAACC,IAAI,CAAC,CAC7D,CAAC,IAAM,CACH,MAAO,CAAAX,YAAY,CACvB,CACJ,CAAC,CAED,cAAe,CAAAV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}