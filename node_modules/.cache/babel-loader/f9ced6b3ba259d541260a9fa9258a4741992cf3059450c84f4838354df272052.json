{"ast":null,"code":"var _jsxFileName = \"/Users/astghik/WebstormProjects/interactive-map-task/src/components/FileUploadButton/FileUploadButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './FileUploadButton.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadButton = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // Function to handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Function to handle file upload\n  const handleUpload = () => {\n    // You can perform file upload logic here, such as sending the file to a server\n    if (selectedFile) {\n      console.log(\"Selected file:\", selectedFile);\n      // Example: Send file to server using fetch or axios\n      // fetch('/upload', {\n      //   method: 'POST',\n      //   body: selectedFile\n      // })\n      // .then(response => response.json())\n      // .then(data => console.log(data))\n      // .catch(error => console.error('Error uploading file:', error));\n    } else {\n      console.log(\"No file selected\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"file-upload\",\n      className: \"custom-file-upload\",\n      children: \"Import Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-upload\",\n      accept: \".csv, .xlsx, .xls\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadButton, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUploadButton;\nexport default FileUploadButton;\nvar _c;\n$RefreshReg$(_c, \"FileUploadButton\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","FileUploadButton","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","console","log","className","root","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","ref","fileInputRef","style","display","onChange","handleFileSelect","_c","$RefreshReg$"],"sources":["/Users/astghik/WebstormProjects/interactive-map-task/src/components/FileUploadButton/FileUploadButton.js"],"sourcesContent":["import React, {useState} from 'react';\nimport styles from './FileUploadButton.module.scss'\n\nconst FileUploadButton = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    // Function to handle file selection\n    const handleFileChange = (event) => {\n        setSelectedFile(event.target.files[0]);\n    };\n\n    // Function to handle file upload\n    const handleUpload = () => {\n        // You can perform file upload logic here, such as sending the file to a server\n        if (selectedFile) {\n            console.log(\"Selected file:\", selectedFile);\n            // Example: Send file to server using fetch or axios\n            // fetch('/upload', {\n            //   method: 'POST',\n            //   body: selectedFile\n            // })\n            // .then(response => response.json())\n            // .then(data => console.log(data))\n            // .catch(error => console.error('Error uploading file:', error));\n        } else {\n            console.log(\"No file selected\");\n        }\n    };\n\n    return (\n        <div className={styles.root}>\n            \n            <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n                Import Data\n            </label>\n            <input\n                type=\"file\"\n                id=\"file-upload\"\n                accept=\".csv, .xlsx, .xls\"\n                ref={fileInputRef}\n                style={{display: 'none'}}\n                onChange={handleFileSelect}\n            />\n        </div>\n    );\n};\n\nexport default FileUploadButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIN,YAAY,EAAE;MACdO,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,YAAY,CAAC;MAC3C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,MAAM;MACHO,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAACe,IAAK;IAAAC,QAAA,gBAExBd,OAAA;MAAOe,OAAO,EAAC,aAAa;MAACH,SAAS,EAAC,oBAAoB;MAAAE,QAAA,EAAC;IAE5D;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRnB,OAAA;MACIoB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,aAAa;MAChBC,MAAM,EAAC,mBAAmB;MAC1BC,GAAG,EAAEC,YAAa;MAClBC,KAAK,EAAE;QAACC,OAAO,EAAE;MAAM,CAAE;MACzBC,QAAQ,EAAEC;IAAiB;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACjB,EAAA,CA1CID,gBAAgB;AAAA4B,EAAA,GAAhB5B,gBAAgB;AA4CtB,eAAeA,gBAAgB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}