{"ast":null,"code":"var _jsxFileName = \"/Users/astghik/WebstormProjects/interactive-map-task/src/components/FileUploadButton/FileUploadButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './FileUploadButton.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUploadButton = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n\n  // Function to handle file selection\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n\n  // Function to handle file upload\n  const handleUpload = () => {\n    // You can perform file upload logic here, such as sending the file to a server\n    if (selectedFile) {\n      console.log(\"Selected file:\", selectedFile);\n      // Example: Send file to server using fetch or axios\n      // fetch('/upload', {\n      //   method: 'POST',\n      //   body: selectedFile\n      // })\n      // .then(response => response.json())\n      // .then(data => console.log(data))\n      // .catch(error => console.error('Error uploading file:', error));\n    } else {\n      console.log(\"No file selected\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".csv, .xlsx, .xls\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Import Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUploadButton, \"cz3B5sQOxlrekAnUFUPeMaA2gqY=\");\n_c = FileUploadButton;\nexport default FileUploadButton;\nvar _c;\n$RefreshReg$(_c, \"FileUploadButton\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","FileUploadButton","_s","selectedFile","setSelectedFile","handleFileChange","event","target","files","handleUpload","console","log","className","root","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/astghik/WebstormProjects/interactive-map-task/src/components/FileUploadButton/FileUploadButton.js"],"sourcesContent":["import React, {useState} from 'react';\nimport styles from './FileUploadButton.module.scss'\n\nconst FileUploadButton = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    // Function to handle file selection\n    const handleFileChange = (event) => {\n        setSelectedFile(event.target.files[0]);\n    };\n\n    // Function to handle file upload\n    const handleUpload = () => {\n        // You can perform file upload logic here, such as sending the file to a server\n        if (selectedFile) {\n            console.log(\"Selected file:\", selectedFile);\n            // Example: Send file to server using fetch or axios\n            // fetch('/upload', {\n            //   method: 'POST',\n            //   body: selectedFile\n            // })\n            // .then(response => response.json())\n            // .then(data => console.log(data))\n            // .catch(error => console.error('Error uploading file:', error));\n        } else {\n            console.log(\"No file selected\");\n        }\n    };\n\n    return (\n        <div className={styles.root}>\n            <input\n                type=\"file\"\n                accept=\".csv, .xlsx, .xls\"\n                onChange={handleFileChange}\n            />\n            <button onClick={handleUpload}>Import Data</button>\n        </div>\n    );\n};\n\nexport default FileUploadButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,MAAM,MAAM,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAMQ,gBAAgB,GAAIC,KAAK,IAAK;IAChCF,eAAe,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIN,YAAY,EAAE;MACdO,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAER,YAAY,CAAC;MAC3C;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,MAAM;MACHO,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACnC;EACJ,CAAC;EAED,oBACIX,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAACe,IAAK;IAAAC,QAAA,gBACxBd,OAAA;MACIe,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,mBAAmB;MAC1BC,QAAQ,EAAEZ;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFrB,OAAA;MAAQsB,OAAO,EAAEb,YAAa;MAAAK,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAEd,CAAC;AAACnB,EAAA,CApCID,gBAAgB;AAAAsB,EAAA,GAAhBtB,gBAAgB;AAsCtB,eAAeA,gBAAgB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}