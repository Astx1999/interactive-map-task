{"ast":null,"code":"var _jsxFileName = \"/Users/astghik/WebstormProjects/interactive-map-task/src/components/ConfirmModal/ConfirmModal.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../Button/Button';\nimport classNames from \"classnames\";\nimport styles from './ConfirmModal.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConfirmModal = ({\n  isOpen,\n  isPortal = false,\n  question,\n  handleAddLocation,\n  handleClosePopup,\n  confirmText = \"Yes\",\n  rejectText = \"No\",\n  className\n}) => {\n  if (!isOpen) return null;\n  const modalContent = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className({\n      [styles.overlay]: isPortal\n    }),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.buttons,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAddLocation,\n          text: confirmText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClosePopup,\n          version: \"secondary\",\n          text: rejectText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n  if (isPortal) {\n    return /*#__PURE__*/ReactDOM.createPortal(modalContent, document.body);\n  } else {\n    return modalContent;\n  }\n};\n_c = ConfirmModal;\nexport default ConfirmModal;\nvar _c;\n$RefreshReg$(_c, \"ConfirmModal\");","map":{"version":3,"names":["React","ReactDOM","Button","classNames","styles","jsxDEV","_jsxDEV","ConfirmModal","isOpen","isPortal","question","handleAddLocation","handleClosePopup","confirmText","rejectText","className","modalContent","overlay","children","fileName","_jsxFileName","lineNumber","columnNumber","buttons","onClick","text","version","createPortal","document","body","_c","$RefreshReg$"],"sources":["/Users/astghik/WebstormProjects/interactive-map-task/src/components/ConfirmModal/ConfirmModal.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '../Button/Button';\nimport classNames from \"classnames\";\nimport styles from './ConfirmModal.module.scss'\n\nconst ConfirmModal = ({isOpen, isPortal = false, question, handleAddLocation, handleClosePopup, confirmText = \"Yes\", rejectText = \"No\", className}) => {\n    if (!isOpen) return null;\n\n    const modalContent = (\n        <div className={className({[styles.overlay]: isPortal})}>\n            <div className={className}>\n                <p>{question}</p>\n                <div className={styles.buttons}>\n                    <Button onClick={handleAddLocation} text={confirmText}/>\n                    <Button onClick={handleClosePopup} version=\"secondary\" text={rejectText}/>\n                </div>\n            </div>\n        </div>\n\n    );\n\n    if (isPortal) {\n        return ReactDOM.createPortal(modalContent, document.body);\n    } else {\n        return modalContent;\n    }\n};\n\nexport default ConfirmModal;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,MAAM,MAAM,4BAA4B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAGA,CAAC;EAACC,MAAM;EAAEC,QAAQ,GAAG,KAAK;EAAEC,QAAQ;EAAEC,iBAAiB;EAAEC,gBAAgB;EAAEC,WAAW,GAAG,KAAK;EAAEC,UAAU,GAAG,IAAI;EAAEC;AAAS,CAAC,KAAK;EACnJ,IAAI,CAACP,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMQ,YAAY,gBACdV,OAAA;IAAKS,SAAS,EAAEA,SAAS,CAAC;MAAC,CAACX,MAAM,CAACa,OAAO,GAAGR;IAAQ,CAAC,CAAE;IAAAS,QAAA,eACpDZ,OAAA;MAAKS,SAAS,EAAEA,SAAU;MAAAG,QAAA,gBACtBZ,OAAA;QAAAY,QAAA,EAAIR;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBhB,OAAA;QAAKS,SAAS,EAAEX,MAAM,CAACmB,OAAQ;QAAAL,QAAA,gBAC3BZ,OAAA,CAACJ,MAAM;UAACsB,OAAO,EAAEb,iBAAkB;UAACc,IAAI,EAAEZ;QAAY;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACxDhB,OAAA,CAACJ,MAAM;UAACsB,OAAO,EAAEZ,gBAAiB;UAACc,OAAO,EAAC,WAAW;UAACD,IAAI,EAAEX;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAER;EAED,IAAIb,QAAQ,EAAE;IACV,oBAAOR,QAAQ,CAAC0B,YAAY,CAACX,YAAY,EAAEY,QAAQ,CAACC,IAAI,CAAC;EAC7D,CAAC,MAAM;IACH,OAAOb,YAAY;EACvB;AACJ,CAAC;AAACc,EAAA,GArBIvB,YAAY;AAuBlB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}